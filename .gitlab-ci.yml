stages:
  - lint
  - build
  - tag-latest
  - deploy

variables:
  IMAGE_TAG: 'registry.savvycom.vn/nam.thanh/one:${CI_COMMIT_SHORT_SHA}'
  IMAGE_LATEST: 'registry.savvycom.vn/nam.thanh/one:latest'
  IMAGE_RELEASE: 'registry.savvycom.vn/nam.thanh/one:release'
  CONTAINER_NAME: 'migrate-script-${CI_COMMIT_SHORT_SHA}'
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''
  GIT_STRATEGY: clone
  CI_PROJECT_PATH: 'nam.thanh/one'

before_script:
  - echo "Authenticating with GitLab Container Registry..."
  - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"


#before_script:
#  - echo "Authenticating with GitLab Container Registry..."
#  - echo "$TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

lint:
  stage: lint
  image: node:20-alpine
  services:
      - docker:24.0.1-dind
  tags:
    - one-local
  script:
    - yarn install --no-cache --ignore-engines --dev-dependencies
    - yarn lint

build:
  stage: build
  tags:
    - one-local
  image: docker:24.0.1
  services:
    - docker:24.0.1-dind
  script:
    - echo "Building Docker image $IMAGE_TAG ..."
    - docker build --no-cache -f Dockerfile -t "$IMAGE_TAG" .
    - echo "Pushing Docker image ..."
    - docker push "$IMAGE_TAG"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "prod" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME  =~ /^hotfix-.*$/
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "feat/deploy-with-registry-local"
  variables:
    GIT_STRATEGY: clone

tag-latest:
  stage: tag-latest
  tags:
    - one-local
  image: docker:24.0.1
  services:
    - docker:24.0.1-dind
  script:
    - echo "Tagging Docker image as latest..."
    - docker tag "$IMAGE_TAG" "$IMAGE_LATEST"
    - docker push "$IMAGE_LATEST"
  only:
    - dev
    - feat/deploy-with-registry-local
  variables:
    GIT_STRATEGY: clone

deploy-job:
  stage: deploy
  image: node:20-alpine
  tags:
    - one-local
  script:
    - echo "Deploy to dev"
    - git remote prune origin
    - git fetch --all
    - git reset --hard origin/feat/deploy-with-registry-local
    - git clean -fd
#     pull this branch to get the latest changes when deploy in it
    - git pull origin feat/deploy-with-registry-local
    - IMAGE_TAG="$IMAGE_LATEST" docker compose -f ./docker-compose.yml build --no-cache
    - IMAGE_TAG="$IMAGE_LATEST" docker compose -f ./docker-compose.yml up -d
    - echo "Deployed successfully!"
  only:
    - dev
    - main
    - feat/deploy-with-registry-local
  variables:
    GIT_STRATEGY: clone
